[{"__symbolic":"module","version":3,"metadata":{"RowContextMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ourpalm-table-row-context-menu","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"},"styleUrls":["./row-context-menu.component.css"],"template":"\n        <ng-template #menusTpl let-menus>\n            <ul class=\"dropdown-menu\">\n                <ng-container *simpleNgFor=\"let menu of menus\">\n                    <ng-container *ngIf=\"menu.separator\">\n                        <li class=\"divider\" [class.hidden]=\"!showMenu(menu)\"></li>\n                    </ng-container>\n                    <ng-container *ngIf=\"!menu.separator && !menu.submenus\">\n                        <li (click)=\"onClickMenu(menu)\" [class.hidden]=\"!showMenu(menu)\">\n                            <a><i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}</a>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"menu.submenus\">\n                        <li class=\"dropdown-submenu\" [class.hidden]=\"!showMenu(menu)\">\n                            <a tabindex=\"-1\"><i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}</a>\n                            <ng-container *ngTemplateOutlet=\"menusTpl;context:{$implicit: menu.submenus}\">\n                            </ng-container>\n                        </li>\n                    </ng-container>\n                </ng-container>\n            </ul>\n        </ng-template>\n\n\n        <div class=\"row-context-menu\" *ngIf=\"menus\" [ngStyle]=\"styler\">\n            <ng-container *ngTemplateOutlet=\"menusTpl; context:{ $implicit: menus }\"></ng-container>\n        </div>\n    "}]}],"members":{"rowComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"}]}],"menus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["menus"]}]}],"styler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"addListener":[{"__symbolic":"method"}],"removeListener":[{"__symbolic":"method"}],"onClickMenu":[{"__symbolic":"method"}],"showMenu":[{"__symbolic":"method"}],"deepCloneMenu":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"RowContextMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ourpalm-table-row-context-menu","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"},"styleUrls":["./row-context-menu.component.css"],"template":"\n        <ng-template #menusTpl let-menus>\n            <ul class=\"dropdown-menu\">\n                <ng-container *simpleNgFor=\"let menu of menus\">\n                    <ng-container *ngIf=\"menu.separator\">\n                        <li class=\"divider\" [class.hidden]=\"!showMenu(menu)\"></li>\n                    </ng-container>\n                    <ng-container *ngIf=\"!menu.separator && !menu.submenus\">\n                        <li (click)=\"onClickMenu(menu)\" [class.hidden]=\"!showMenu(menu)\">\n                            <a><i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}</a>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"menu.submenus\">\n                        <li class=\"dropdown-submenu\" [class.hidden]=\"!showMenu(menu)\">\n                            <a tabindex=\"-1\"><i [ngClass]=\"menu.iconCls || 'empty-icon'\"></i>{{ menu.text }}</a>\n                            <ng-container *ngTemplateOutlet=\"menusTpl;context:{$implicit: menu.submenus}\">\n                            </ng-container>\n                        </li>\n                    </ng-container>\n                </ng-container>\n            </ul>\n        </ng-template>\n\n\n        <div class=\"row-context-menu\" *ngIf=\"menus\" [ngStyle]=\"styler\">\n            <ng-container *ngTemplateOutlet=\"menusTpl; context:{ $implicit: menus }\"></ng-container>\n        </div>\n    "}]}],"members":{"rowComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"}]}],"menus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["menus"]}]}],"styler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"addListener":[{"__symbolic":"method"}],"removeListener":[{"__symbolic":"method"}],"onClickMenu":[{"__symbolic":"method"}],"showMenu":[{"__symbolic":"method"}],"deepCloneMenu":[{"__symbolic":"method"}]}}}}]